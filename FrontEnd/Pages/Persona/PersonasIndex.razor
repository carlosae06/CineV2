@page "/Personas"
@inject IRepositorio repositorioHTTP
@attribute [Authorize(Roles = "ADM")]
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensaje
 

<button class="btn btn-primary" @onclick="Crear">Crear</button>
<ListadoGenerico Listado="persona">
    <HayRegistroCompleto>
      <div class="mt-5" >
            <table class="table table-hover table-responsive-lg">
                <thead class="table-dark">
                   <tr>
                        <th scope="col">#</th>
                        <th scope="col">Ci</th>
                        <th scope="col">Nombre</th>
                        <th scope="col">Apellido Paterno</th>
                        <th scope="col">ApellidoMaterno</th>
                        <th scope="col">Telefono</th>
                        <th scope="col">Acciones</th>
                   </tr>
                </thead>
                <tbody>
                    @foreach (var item in persona!)
                   {
                       <tr>
                           <td>@item.Id</td>
                           <td>@item.Ci</td>
                           <td>@item.Nombre</td>
                           <td>@item.ApellidoPaterno</td>
                           <td>@item.ApellidoMaterno</td>
                           <td>@item.Telefono</td>
                           <td>
                                <AuthorizeView Roles="ADM">
                                    <button class="btn-primary" @onclick="@(()=>Modificar(item.Id))"><span class="oi oi-pencil" aria-hidden="true"></span></button>
                                </AuthorizeView>
                                <AuthorizeView Roles="ADM">
                                    <button class="btn-danger" @onclick="@(()=> Eliminar(item.Id))"><span class="oi oi-delete" aria-hidden="true"></span></button>
                               </AuthorizeView>
                           </td>
                       </tr>
         
                   }

                </tbody>
          </table>
       </div>

        <Paginacion PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada"
                    PaginasTotales="paginasTotales"></Paginacion>
    </HayRegistroCompleto>
    <NoHayRegistro>
        <h6>no hay registros desde TEST</h6>
    </NoHayRegistro>
    <Cargando>
        <h1>Esperando informaciòn</h1>
    </Cargando>
    

</ListadoGenerico>


@code {

    private int paginaActual = 1;
    private int paginasTotales;

    List<DTOs.Persona.PersonaDTO>? persona;
    DTOs.ResponseListDTO<DTOs.Persona.PersonaDTO>? responseListDTO;

    

    protected override async Task OnInitializedAsync()
    {
        await TraerDatos();
       
       
    }
    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await TraerDatos(pagina);
    }
    private async Task TraerDatos(int pagina = 1)
    {
        try
        {
            var responseWrapper = await repositorioHTTP.Get<ResponseListDTO<DTOs.Persona.PersonaDTO>>($"Personas?Pagina={pagina}&CantidadRegistrosPorPagina=10");
            if (!responseWrapper.Error)
            {
                responseListDTO = responseWrapper.Response;

                persona = responseListDTO.value;
                paginasTotales = responseListDTO.quanty;

            }
        }
        catch (Exception ex)
        {
            var mess = ex.Message;
        }
    }

    private void Crear()
    {
        navigationManager.NavigateTo("/Personas/crear");
    }
    private void Modificar(int id)
    {
        navigationManager.NavigateTo($"/Personas/editar/{id}");
    }
    private async Task Eliminar(int id)
    {
        //var pregunta = await mostrarMensaje.Confirmacion("Eliminar", "Esta seguro de eliminar el registro", "question");
        //if (pregunta)
        //{
            var response = await repositorioHTTP.Delete<object>($"Personas/{id}");
            //if (!response.Error)
            //{
            //    await mostrarMensaje.MostrarMensajeExitoso("Registro eliminado");
                await TraerDatos();
            //}
            //else
            //{
            //    await mostrarMensaje.MostrarMensajeError("Error al eliminar el registro");
            //}
        //}
    }
}
